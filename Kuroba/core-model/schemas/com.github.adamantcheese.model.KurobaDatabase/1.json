{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "8bd48de5a0c7028184c7645c3bf273a1",
    "entities": [
      {
        "tableName": "chan_board",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`board_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `site_name` TEXT NOT NULL, `board_code` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "boardId",
            "columnName": "board_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "siteName",
            "columnName": "site_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "boardCode",
            "columnName": "board_code",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "board_id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "chan_board_site_name_idx",
            "unique": false,
            "columnNames": [
              "site_name"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `chan_board_site_name_idx` ON `${TABLE_NAME}` (`site_name`)"
          },
          {
            "name": "chan_board_board_code_idx",
            "unique": false,
            "columnNames": [
              "board_code"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `chan_board_board_code_idx` ON `${TABLE_NAME}` (`board_code`)"
          },
          {
            "name": "chan_board_board_descriptor_idx",
            "unique": true,
            "columnNames": [
              "site_name",
              "board_code"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `chan_board_board_descriptor_idx` ON `${TABLE_NAME}` (`site_name`, `board_code`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "chan_thread",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`thread_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `thread_no` INTEGER NOT NULL, `owner_board_id` INTEGER NOT NULL, `last_modified` INTEGER NOT NULL, `replies` INTEGER NOT NULL, `thread_images_count` INTEGER NOT NULL, `unique_ips` INTEGER NOT NULL, `sticky` INTEGER NOT NULL, `closed` INTEGER NOT NULL, `archived` INTEGER NOT NULL, FOREIGN KEY(`owner_board_id`) REFERENCES `chan_board`(`board_id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "threadId",
            "columnName": "thread_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "threadNo",
            "columnName": "thread_no",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerBoardId",
            "columnName": "owner_board_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastModified",
            "columnName": "last_modified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "replies",
            "columnName": "replies",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "threadImagesCount",
            "columnName": "thread_images_count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uniqueIps",
            "columnName": "unique_ips",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sticky",
            "columnName": "sticky",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "closed",
            "columnName": "closed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "archived",
            "columnName": "archived",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "thread_id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_chan_thread_thread_no",
            "unique": false,
            "columnNames": [
              "thread_no"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chan_thread_thread_no` ON `${TABLE_NAME}` (`thread_no`)"
          },
          {
            "name": "index_chan_thread_owner_board_id",
            "unique": false,
            "columnNames": [
              "owner_board_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chan_thread_owner_board_id` ON `${TABLE_NAME}` (`owner_board_id`)"
          },
          {
            "name": "index_chan_thread_thread_no_owner_board_id",
            "unique": true,
            "columnNames": [
              "thread_no",
              "owner_board_id"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_chan_thread_thread_no_owner_board_id` ON `${TABLE_NAME}` (`thread_no`, `owner_board_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chan_board",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "owner_board_id"
            ],
            "referencedColumns": [
              "board_id"
            ]
          }
        ]
      },
      {
        "tableName": "chan_post_id",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`post_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `owner_archive_id` INTEGER NOT NULL, `owner_thread_id` INTEGER NOT NULL, `post_no` INTEGER NOT NULL, `post_sub_no` INTEGER NOT NULL, FOREIGN KEY(`owner_thread_id`) REFERENCES `chan_thread`(`thread_id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "postId",
            "columnName": "post_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerArchiveId",
            "columnName": "owner_archive_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerThreadId",
            "columnName": "owner_thread_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "postNo",
            "columnName": "post_no",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "postSubNo",
            "columnName": "post_sub_no",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "post_id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "chan_post_id_post_id_full_idx",
            "unique": true,
            "columnNames": [
              "owner_archive_id",
              "owner_thread_id",
              "post_no",
              "post_sub_no"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `chan_post_id_post_id_full_idx` ON `${TABLE_NAME}` (`owner_archive_id`, `owner_thread_id`, `post_no`, `post_sub_no`)"
          },
          {
            "name": "chan_post_id_post_no_idx",
            "unique": false,
            "columnNames": [
              "post_no"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `chan_post_id_post_no_idx` ON `${TABLE_NAME}` (`post_no`)"
          },
          {
            "name": "chan_post_id_post_sub_no_idx",
            "unique": false,
            "columnNames": [
              "post_sub_no"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `chan_post_id_post_sub_no_idx` ON `${TABLE_NAME}` (`post_sub_no`)"
          },
          {
            "name": "chan_post_id_thread_id_idx",
            "unique": false,
            "columnNames": [
              "owner_thread_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `chan_post_id_thread_id_idx` ON `${TABLE_NAME}` (`owner_thread_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chan_thread",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "owner_thread_id"
            ],
            "referencedColumns": [
              "thread_id"
            ]
          }
        ]
      },
      {
        "tableName": "chan_post",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chan_post_id` INTEGER NOT NULL, `deleted` INTEGER NOT NULL, `timestamp_seconds` INTEGER NOT NULL, `name` TEXT, `poster_id` TEXT, `moderator_capcode` TEXT, `is_op` INTEGER NOT NULL, `is_saved_reply` INTEGER NOT NULL, PRIMARY KEY(`chan_post_id`), FOREIGN KEY(`chan_post_id`) REFERENCES `chan_post_id`(`post_id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "chanPostId",
            "columnName": "chan_post_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deleted",
            "columnName": "deleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp_seconds",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "posterId",
            "columnName": "poster_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "moderatorCapcode",
            "columnName": "moderator_capcode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isOp",
            "columnName": "is_op",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSavedReply",
            "columnName": "is_saved_reply",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "chan_post_id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "chan_post_id",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "chan_post_id"
            ],
            "referencedColumns": [
              "post_id"
            ]
          }
        ]
      },
      {
        "tableName": "chan_post_image",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`post_image_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `owner_post_id` INTEGER NOT NULL, `owner_archive_id` INTEGER NOT NULL, `server_filename` TEXT NOT NULL, `thumbnail_url` TEXT, `image_url` TEXT, `spoiler_thumbnail_url` TEXT, `filename` TEXT, `extension` TEXT, `image_width` INTEGER NOT NULL, `image_height` INTEGER NOT NULL, `spoiler` INTEGER NOT NULL, `is_inlined` INTEGER NOT NULL, `file_size` INTEGER NOT NULL, `file_hash` TEXT, `type` INTEGER, FOREIGN KEY(`owner_post_id`) REFERENCES `chan_post`(`chan_post_id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "postImageId",
            "columnName": "post_image_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerPostId",
            "columnName": "owner_post_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerArchiveId",
            "columnName": "owner_archive_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "serverFilename",
            "columnName": "server_filename",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnail_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "image_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "spoilerThumbnailUrl",
            "columnName": "spoiler_thumbnail_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "filename",
            "columnName": "filename",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "extension",
            "columnName": "extension",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageWidth",
            "columnName": "image_width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "imageHeight",
            "columnName": "image_height",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "spoiler",
            "columnName": "spoiler",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isInlined",
            "columnName": "is_inlined",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fileSize",
            "columnName": "file_size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fileHash",
            "columnName": "file_hash",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "post_image_id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_chan_post_image_owner_post_id_owner_archive_id_server_filename",
            "unique": true,
            "columnNames": [
              "owner_post_id",
              "owner_archive_id",
              "server_filename"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_chan_post_image_owner_post_id_owner_archive_id_server_filename` ON `${TABLE_NAME}` (`owner_post_id`, `owner_archive_id`, `server_filename`)"
          },
          {
            "name": "index_chan_post_image_owner_post_id",
            "unique": false,
            "columnNames": [
              "owner_post_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chan_post_image_owner_post_id` ON `${TABLE_NAME}` (`owner_post_id`)"
          },
          {
            "name": "index_chan_post_image_owner_post_id_owner_archive_id",
            "unique": false,
            "columnNames": [
              "owner_post_id",
              "owner_archive_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chan_post_image_owner_post_id_owner_archive_id` ON `${TABLE_NAME}` (`owner_post_id`, `owner_archive_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chan_post",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "owner_post_id"
            ],
            "referencedColumns": [
              "chan_post_id"
            ]
          }
        ]
      },
      {
        "tableName": "chan_post_http_icon",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`icon_url` TEXT NOT NULL, `owner_post_id` INTEGER NOT NULL, `icon_name` TEXT NOT NULL, PRIMARY KEY(`icon_url`, `owner_post_id`), FOREIGN KEY(`owner_post_id`) REFERENCES `chan_post`(`chan_post_id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "iconUrl",
            "columnName": "icon_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ownerPostId",
            "columnName": "owner_post_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "iconName",
            "columnName": "icon_name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "icon_url",
            "owner_post_id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_chan_post_http_icon_owner_post_id",
            "unique": false,
            "columnNames": [
              "owner_post_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chan_post_http_icon_owner_post_id` ON `${TABLE_NAME}` (`owner_post_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chan_post",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "owner_post_id"
            ],
            "referencedColumns": [
              "chan_post_id"
            ]
          }
        ]
      },
      {
        "tableName": "chan_text_span",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`text_span_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `owner_post_id` INTEGER NOT NULL, `original_text` TEXT NOT NULL, `span_info_json` TEXT NOT NULL, `text_type` INTEGER NOT NULL, FOREIGN KEY(`owner_post_id`) REFERENCES `chan_post`(`chan_post_id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "textSpanId",
            "columnName": "text_span_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerPostId",
            "columnName": "owner_post_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "originalText",
            "columnName": "original_text",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "spanInfoJson",
            "columnName": "span_info_json",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "textType",
            "columnName": "text_type",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "text_span_id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_chan_text_span_owner_post_id",
            "unique": false,
            "columnNames": [
              "owner_post_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chan_text_span_owner_post_id` ON `${TABLE_NAME}` (`owner_post_id`)"
          },
          {
            "name": "index_chan_text_span_owner_post_id_text_type",
            "unique": true,
            "columnNames": [
              "owner_post_id",
              "text_type"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_chan_text_span_owner_post_id_text_type` ON `${TABLE_NAME}` (`owner_post_id`, `text_type`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chan_post",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "owner_post_id"
            ],
            "referencedColumns": [
              "chan_post_id"
            ]
          }
        ]
      },
      {
        "tableName": "chan_post_reply",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`post_reply_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `owner_post_id` INTEGER NOT NULL, `reply_no` INTEGER NOT NULL, `reply_type` INTEGER NOT NULL, FOREIGN KEY(`owner_post_id`) REFERENCES `chan_post`(`chan_post_id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "postReplyId",
            "columnName": "post_reply_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerPostId",
            "columnName": "owner_post_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "replyNo",
            "columnName": "reply_no",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "replyType",
            "columnName": "reply_type",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "post_reply_id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "chan_post_reply_owner_post_id_reply_no_reply_type_idx",
            "unique": true,
            "columnNames": [
              "owner_post_id",
              "reply_no",
              "reply_type"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `chan_post_reply_owner_post_id_reply_no_reply_type_idx` ON `${TABLE_NAME}` (`owner_post_id`, `reply_no`, `reply_type`)"
          },
          {
            "name": "chan_post_reply_owner_post_id_reply_type_idx",
            "unique": false,
            "columnNames": [
              "owner_post_id",
              "reply_type"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `chan_post_reply_owner_post_id_reply_type_idx` ON `${TABLE_NAME}` (`owner_post_id`, `reply_type`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chan_post",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "owner_post_id"
            ],
            "referencedColumns": [
              "chan_post_id"
            ]
          }
        ]
      },
      {
        "tableName": "media_service_link_extra_content_entity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`video_id` TEXT NOT NULL, `media_service_type` INTEGER NOT NULL, `video_title` TEXT, `video_duration` TEXT, `inserted_at` INTEGER NOT NULL, PRIMARY KEY(`video_id`))",
        "fields": [
          {
            "fieldPath": "videoId",
            "columnName": "video_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mediaServiceType",
            "columnName": "media_service_type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "videoTitle",
            "columnName": "video_title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "videoDuration",
            "columnName": "video_duration",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "insertedAt",
            "columnName": "inserted_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "video_id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "media_service_link_extra_content_entity_inserted_at_idx",
            "unique": false,
            "columnNames": [
              "inserted_at"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `media_service_link_extra_content_entity_inserted_at_idx` ON `${TABLE_NAME}` (`inserted_at`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "seen_post",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`post_no` INTEGER NOT NULL, `owner_thread_id` INTEGER NOT NULL, `inserted_at` INTEGER NOT NULL, PRIMARY KEY(`post_no`), FOREIGN KEY(`owner_thread_id`) REFERENCES `chan_thread`(`thread_id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "postNo",
            "columnName": "post_no",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerThreadId",
            "columnName": "owner_thread_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "insertedAt",
            "columnName": "inserted_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "post_no"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "seen_post_owner_thread_id_idx",
            "unique": false,
            "columnNames": [
              "owner_thread_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `seen_post_owner_thread_id_idx` ON `${TABLE_NAME}` (`owner_thread_id`)"
          },
          {
            "name": "seen_post_inserted_at_idx",
            "unique": false,
            "columnNames": [
              "inserted_at"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `seen_post_inserted_at_idx` ON `${TABLE_NAME}` (`inserted_at`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chan_thread",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "owner_thread_id"
            ],
            "referencedColumns": [
              "thread_id"
            ]
          }
        ]
      },
      {
        "tableName": "inlined_file_info_entity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`file_url` TEXT NOT NULL, `file_size` INTEGER, `inserted_at` INTEGER NOT NULL, PRIMARY KEY(`file_url`))",
        "fields": [
          {
            "fieldPath": "fileUrl",
            "columnName": "file_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fileSize",
            "columnName": "file_size",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "insertedAt",
            "columnName": "inserted_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "file_url"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "inlined_file_info_entity_inserted_at_idx",
            "unique": false,
            "columnNames": [
              "inserted_at"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `inlined_file_info_entity_inserted_at_idx` ON `${TABLE_NAME}` (`inserted_at`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "third_party_archive_fetch_history",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `owner_third_party_archive_id` INTEGER NOT NULL, `owner_thread_id` INTEGER NOT NULL, `success` INTEGER NOT NULL, `error_text` TEXT, `inserted_on` INTEGER NOT NULL, FOREIGN KEY(`owner_third_party_archive_id`) REFERENCES `third_party_archive_info`(`archive_id`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`owner_thread_id`) REFERENCES `chan_thread`(`thread_id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerThirdPartyArchiveId",
            "columnName": "owner_third_party_archive_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerThreadId",
            "columnName": "owner_thread_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "success",
            "columnName": "success",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errorText",
            "columnName": "error_text",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "insertedOn",
            "columnName": "inserted_on",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "third_party_archive_fetch_history_owner_third_party_archive_idx",
            "unique": false,
            "columnNames": [
              "owner_third_party_archive_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `third_party_archive_fetch_history_owner_third_party_archive_idx` ON `${TABLE_NAME}` (`owner_third_party_archive_id`)"
          },
          {
            "name": "third_party_archive_fetch_history_owner_thread_id_idx",
            "unique": false,
            "columnNames": [
              "owner_thread_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `third_party_archive_fetch_history_owner_thread_id_idx` ON `${TABLE_NAME}` (`owner_thread_id`)"
          },
          {
            "name": "third_party_archive_fetch_history_owner_third_party_archive_thread_id_idx",
            "unique": false,
            "columnNames": [
              "owner_third_party_archive_id",
              "owner_thread_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `third_party_archive_fetch_history_owner_third_party_archive_thread_id_idx` ON `${TABLE_NAME}` (`owner_third_party_archive_id`, `owner_thread_id`)"
          },
          {
            "name": "third_party_archive_fetch_history_inserted_on_idx",
            "unique": false,
            "columnNames": [
              "inserted_on"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `third_party_archive_fetch_history_inserted_on_idx` ON `${TABLE_NAME}` (`inserted_on`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "third_party_archive_info",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "owner_third_party_archive_id"
            ],
            "referencedColumns": [
              "archive_id"
            ]
          },
          {
            "table": "chan_thread",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "owner_thread_id"
            ],
            "referencedColumns": [
              "thread_id"
            ]
          }
        ]
      },
      {
        "tableName": "third_party_archive_info",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`archive_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `archive_domain` TEXT NOT NULL, `archive_enabled` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "archiveId",
            "columnName": "archive_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "archiveDomain",
            "columnName": "archive_domain",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "enabled",
            "columnName": "archive_enabled",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "archive_id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "third_party_archive_info_archive_domain_idx",
            "unique": true,
            "columnNames": [
              "archive_domain"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `third_party_archive_info_archive_domain_idx` ON `${TABLE_NAME}` (`archive_domain`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [
      {
        "viewName": "chan_threads_with_posts",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT\n        threads.thread_id,\n        threads.thread_no,\n        threads.last_modified,\n        COUNT(postIds.post_id) as posts_count\n    FROM\n        chan_post posts,\n        chan_post_id postIds\n    LEFT JOIN chan_thread threads \n        ON postIds.owner_thread_id = threads.thread_id\n    WHERE \n        posts.is_op = 0\n    AND \n        threads.last_modified > 0\n    GROUP BY threads.thread_id\n    HAVING posts_count >= 0\n    ORDER BY threads.last_modified ASC"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '8bd48de5a0c7028184c7645c3bf273a1')"
    ]
  }
}